import os
import numpy as np
import tempfile, zipfile
import torch
import torch.nn as nn
import torch.nn.functional as F
try:
    import torchvision
    import torchaudio
except:
    pass

class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()

        self.model_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=3, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.model_23_cv3_2_1_1_act = nn.SiLU()
        self.model_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_0 = nn.SiLU()
        self.model_2_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_1 = nn.SiLU()
        self.model_2_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=8, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_2 = nn.SiLU()
        self.model_2_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=8, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_3 = nn.SiLU()
        self.model_2_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=48, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_4 = nn.SiLU()
        self.model_3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_5 = nn.SiLU()
        self.model_4_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_6 = nn.SiLU()
        self.model_4_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_7 = nn.SiLU()
        self.model_4_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_8 = nn.SiLU()
        self.model_4_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=96, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_9 = nn.SiLU()
        self.model_5_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_10 = nn.SiLU()
        self.model_6_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_11 = nn.SiLU()
        self.model_6_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_12 = nn.SiLU()
        self.model_6_m_0_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_13 = nn.SiLU()
        self.model_6_m_0_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_14 = nn.SiLU()
        self.model_6_m_0_m_1_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_15 = nn.SiLU()
        self.model_6_m_0_m_1_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_16 = nn.SiLU()
        self.model_6_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_17 = nn.SiLU()
        self.model_6_m_0_cv3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_18 = nn.SiLU()
        self.model_6_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_19 = nn.SiLU()
        self.model_7_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_20 = nn.SiLU()
        self.model_8_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_21 = nn.SiLU()
        self.model_8_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_22 = nn.SiLU()
        self.model_8_m_0_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_23 = nn.SiLU()
        self.model_8_m_0_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_24 = nn.SiLU()
        self.model_8_m_0_m_1_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_25 = nn.SiLU()
        self.model_8_m_0_m_1_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_26 = nn.SiLU()
        self.model_8_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_27 = nn.SiLU()
        self.model_8_m_0_cv3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_28 = nn.SiLU()
        self.model_8_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_29 = nn.SiLU()
        self.model_9_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_30 = nn.SiLU()
        self.model_9_m = nn.MaxPool2d(ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        self.pnnx_unique_31 = nn.MaxPool2d(ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        self.pnnx_unique_32 = nn.MaxPool2d(ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        self.model_9_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_33 = nn.SiLU()
        self.model_10_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_34 = nn.SiLU()
        self.model_10_m_0_attn_qkv_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_10_m_0_attn_pe_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.model_10_m_0_attn_proj_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_10_m_0_ffn_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_35 = nn.SiLU()
        self.model_10_m_0_ffn_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_10_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_36 = nn.SiLU()
        self.model_11 = nn.Upsample(mode='nearest', scale_factor=(2.000000,2.000000), size=None)
        self.model_13_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_37 = nn.SiLU()
        self.model_13_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_38 = nn.SiLU()
        self.model_13_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_39 = nn.SiLU()
        self.model_13_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_40 = nn.SiLU()
        self.model_14 = nn.Upsample(mode='nearest', scale_factor=(2.000000,2.000000), size=None)
        self.model_16_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_41 = nn.SiLU()
        self.model_16_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_42 = nn.SiLU()
        self.model_16_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_43 = nn.SiLU()
        self.model_16_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=96, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_44 = nn.SiLU()
        self.model_17_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_45 = nn.SiLU()
        self.model_19_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_46 = nn.SiLU()
        self.model_19_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_47 = nn.SiLU()
        self.model_19_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_48 = nn.SiLU()
        self.model_19_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_49 = nn.SiLU()
        self.model_20_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_50 = nn.SiLU()
        self.model_22_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_51 = nn.SiLU()
        self.model_22_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_52 = nn.SiLU()
        self.model_22_m_0_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_53 = nn.SiLU()
        self.model_22_m_0_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_54 = nn.SiLU()
        self.model_22_m_0_m_1_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_55 = nn.SiLU()
        self.model_22_m_0_m_1_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_56 = nn.SiLU()
        self.model_22_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_57 = nn.SiLU()
        self.model_22_m_0_cv3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_58 = nn.SiLU()
        self.model_22_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_59 = nn.SiLU()
        self.model_23_cv2_0_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_60 = nn.SiLU()
        self.model_23_cv2_0_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_61 = nn.SiLU()
        self.model_23_cv2_0_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_23_cv3_0_0_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_62 = nn.SiLU()
        self.model_23_cv3_0_0_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_63 = nn.SiLU()
        self.model_23_cv3_0_1_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=80, in_channels=80, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_64 = nn.SiLU()
        self.model_23_cv3_0_1_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_65 = nn.SiLU()
        self.model_23_cv3_0_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_23_cv2_1_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_66 = nn.SiLU()
        self.model_23_cv2_1_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_67 = nn.SiLU()
        self.model_23_cv2_1_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_23_cv3_1_0_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_68 = nn.SiLU()
        self.model_23_cv3_1_0_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_69 = nn.SiLU()
        self.model_23_cv3_1_1_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=80, in_channels=80, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_70 = nn.SiLU()
        self.model_23_cv3_1_1_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_71 = nn.SiLU()
        self.model_23_cv3_1_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_23_cv2_2_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_72 = nn.SiLU()
        self.model_23_cv2_2_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_73 = nn.SiLU()
        self.model_23_cv2_2_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_23_cv3_2_0_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_74 = nn.SiLU()
        self.model_23_cv3_2_0_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_75 = nn.SiLU()
        self.model_23_cv3_2_1_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=80, in_channels=80, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_76 = nn.SiLU()
        self.model_23_cv3_2_1_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_77 = nn.SiLU()
        self.model_23_cv3_2_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_23_dfl_conv = nn.Conv2d(bias=False, dilation=(1,1), groups=1, in_channels=16, kernel_size=(1,1), out_channels=1, padding=(0,0), padding_mode='zeros', stride=(1,1))

        archive = zipfile.ZipFile('yolo11n.pnnx.bin', 'r')
        self.model_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.0.conv.bias', (16), 'float32')
        self.model_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.0.conv.weight', (16,3,3,3), 'float32')
        self.model_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.1.conv.bias', (32), 'float32')
        self.model_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.1.conv.weight', (32,16,3,3), 'float32')
        self.model_2_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv1.conv.bias', (32), 'float32')
        self.model_2_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv1.conv.weight', (32,32,1,1), 'float32')
        self.model_2_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv1.conv.bias', (8), 'float32')
        self.model_2_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv1.conv.weight', (8,16,3,3), 'float32')
        self.model_2_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv2.conv.bias', (16), 'float32')
        self.model_2_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv2.conv.weight', (16,8,3,3), 'float32')
        self.model_2_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv2.conv.bias', (64), 'float32')
        self.model_2_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv2.conv.weight', (64,48,1,1), 'float32')
        self.model_3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.3.conv.bias', (64), 'float32')
        self.model_3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.3.conv.weight', (64,64,3,3), 'float32')
        self.model_4_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv1.conv.bias', (64), 'float32')
        self.model_4_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv1.conv.weight', (64,64,1,1), 'float32')
        self.model_4_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv1.conv.bias', (16), 'float32')
        self.model_4_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv1.conv.weight', (16,32,3,3), 'float32')
        self.model_4_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv2.conv.bias', (32), 'float32')
        self.model_4_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv2.conv.weight', (32,16,3,3), 'float32')
        self.model_4_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv2.conv.bias', (128), 'float32')
        self.model_4_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv2.conv.weight', (128,96,1,1), 'float32')
        self.model_5_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.5.conv.bias', (128), 'float32')
        self.model_5_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.5.conv.weight', (128,128,3,3), 'float32')
        self.model_6_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv1.conv.bias', (128), 'float32')
        self.model_6_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv1.conv.weight', (128,128,1,1), 'float32')
        self.model_6_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv1.conv.bias', (32), 'float32')
        self.model_6_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv1.conv.weight', (32,64,1,1), 'float32')
        self.model_6_m_0_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.0.cv1.conv.bias', (32), 'float32')
        self.model_6_m_0_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.0.cv1.conv.weight', (32,32,3,3), 'float32')
        self.model_6_m_0_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.0.cv2.conv.bias', (32), 'float32')
        self.model_6_m_0_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.0.cv2.conv.weight', (32,32,3,3), 'float32')
        self.model_6_m_0_m_1_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.1.cv1.conv.bias', (32), 'float32')
        self.model_6_m_0_m_1_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.1.cv1.conv.weight', (32,32,3,3), 'float32')
        self.model_6_m_0_m_1_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.1.cv2.conv.bias', (32), 'float32')
        self.model_6_m_0_m_1_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.m.1.cv2.conv.weight', (32,32,3,3), 'float32')
        self.model_6_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv2.conv.bias', (32), 'float32')
        self.model_6_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv2.conv.weight', (32,64,1,1), 'float32')
        self.model_6_m_0_cv3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv3.conv.bias', (64), 'float32')
        self.model_6_m_0_cv3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv3.conv.weight', (64,64,1,1), 'float32')
        self.model_6_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv2.conv.bias', (128), 'float32')
        self.model_6_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv2.conv.weight', (128,192,1,1), 'float32')
        self.model_7_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.7.conv.bias', (256), 'float32')
        self.model_7_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.7.conv.weight', (256,128,3,3), 'float32')
        self.model_8_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv1.conv.bias', (256), 'float32')
        self.model_8_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv1.conv.weight', (256,256,1,1), 'float32')
        self.model_8_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv1.conv.bias', (64), 'float32')
        self.model_8_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv1.conv.weight', (64,128,1,1), 'float32')
        self.model_8_m_0_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.0.cv1.conv.bias', (64), 'float32')
        self.model_8_m_0_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.0.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_8_m_0_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.0.cv2.conv.bias', (64), 'float32')
        self.model_8_m_0_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.0.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_8_m_0_m_1_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.1.cv1.conv.bias', (64), 'float32')
        self.model_8_m_0_m_1_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.1.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_8_m_0_m_1_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.1.cv2.conv.bias', (64), 'float32')
        self.model_8_m_0_m_1_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.m.1.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_8_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv2.conv.bias', (64), 'float32')
        self.model_8_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv2.conv.weight', (64,128,1,1), 'float32')
        self.model_8_m_0_cv3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv3.conv.bias', (128), 'float32')
        self.model_8_m_0_cv3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv3.conv.weight', (128,128,1,1), 'float32')
        self.model_8_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv2.conv.bias', (256), 'float32')
        self.model_8_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv2.conv.weight', (256,384,1,1), 'float32')
        self.model_9_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv1.conv.bias', (128), 'float32')
        self.model_9_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv1.conv.weight', (128,256,1,1), 'float32')
        self.model_9_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv2.conv.bias', (256), 'float32')
        self.model_9_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv2.conv.weight', (256,512,1,1), 'float32')
        self.model_10_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.cv1.conv.bias', (256), 'float32')
        self.model_10_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.cv1.conv.weight', (256,256,1,1), 'float32')
        self.model_10_m_0_attn_qkv_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.attn.qkv.conv.bias', (256), 'float32')
        self.model_10_m_0_attn_qkv_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.attn.qkv.conv.weight', (256,128,1,1), 'float32')
        self.model_10_m_0_attn_pe_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.attn.pe.conv.bias', (128), 'float32')
        self.model_10_m_0_attn_pe_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.attn.pe.conv.weight', (128,1,3,3), 'float32')
        self.model_10_m_0_attn_proj_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.attn.proj.conv.bias', (128), 'float32')
        self.model_10_m_0_attn_proj_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.attn.proj.conv.weight', (128,128,1,1), 'float32')
        self.model_10_m_0_ffn_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.ffn.0.conv.bias', (256), 'float32')
        self.model_10_m_0_ffn_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.ffn.0.conv.weight', (256,128,1,1), 'float32')
        self.model_10_m_0_ffn_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.ffn.1.conv.bias', (128), 'float32')
        self.model_10_m_0_ffn_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.m.0.ffn.1.conv.weight', (128,256,1,1), 'float32')
        self.model_10_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.10.cv2.conv.bias', (256), 'float32')
        self.model_10_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.10.cv2.conv.weight', (256,256,1,1), 'float32')
        self.model_13_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.13.cv1.conv.bias', (128), 'float32')
        self.model_13_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.13.cv1.conv.weight', (128,384,1,1), 'float32')
        self.model_13_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.13.m.0.cv1.conv.bias', (32), 'float32')
        self.model_13_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.13.m.0.cv1.conv.weight', (32,64,3,3), 'float32')
        self.model_13_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.13.m.0.cv2.conv.bias', (64), 'float32')
        self.model_13_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.13.m.0.cv2.conv.weight', (64,32,3,3), 'float32')
        self.model_13_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.13.cv2.conv.bias', (128), 'float32')
        self.model_13_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.13.cv2.conv.weight', (128,192,1,1), 'float32')
        self.model_16_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.16.cv1.conv.bias', (64), 'float32')
        self.model_16_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.16.cv1.conv.weight', (64,256,1,1), 'float32')
        self.model_16_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.16.m.0.cv1.conv.bias', (16), 'float32')
        self.model_16_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.16.m.0.cv1.conv.weight', (16,32,3,3), 'float32')
        self.model_16_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.16.m.0.cv2.conv.bias', (32), 'float32')
        self.model_16_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.16.m.0.cv2.conv.weight', (32,16,3,3), 'float32')
        self.model_16_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.16.cv2.conv.bias', (64), 'float32')
        self.model_16_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.16.cv2.conv.weight', (64,96,1,1), 'float32')
        self.model_17_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.17.conv.bias', (64), 'float32')
        self.model_17_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.17.conv.weight', (64,64,3,3), 'float32')
        self.model_19_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.19.cv1.conv.bias', (128), 'float32')
        self.model_19_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.19.cv1.conv.weight', (128,192,1,1), 'float32')
        self.model_19_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.19.m.0.cv1.conv.bias', (32), 'float32')
        self.model_19_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.19.m.0.cv1.conv.weight', (32,64,3,3), 'float32')
        self.model_19_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.19.m.0.cv2.conv.bias', (64), 'float32')
        self.model_19_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.19.m.0.cv2.conv.weight', (64,32,3,3), 'float32')
        self.model_19_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.19.cv2.conv.bias', (128), 'float32')
        self.model_19_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.19.cv2.conv.weight', (128,192,1,1), 'float32')
        self.model_20_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.20.conv.bias', (128), 'float32')
        self.model_20_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.20.conv.weight', (128,128,3,3), 'float32')
        self.model_22_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv1.conv.bias', (256), 'float32')
        self.model_22_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv1.conv.weight', (256,384,1,1), 'float32')
        self.model_22_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.cv1.conv.bias', (64), 'float32')
        self.model_22_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.cv1.conv.weight', (64,128,1,1), 'float32')
        self.model_22_m_0_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.0.cv1.conv.bias', (64), 'float32')
        self.model_22_m_0_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.0.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_22_m_0_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.0.cv2.conv.bias', (64), 'float32')
        self.model_22_m_0_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.0.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_22_m_0_m_1_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.1.cv1.conv.bias', (64), 'float32')
        self.model_22_m_0_m_1_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.1.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_22_m_0_m_1_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.1.cv2.conv.bias', (64), 'float32')
        self.model_22_m_0_m_1_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.m.1.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_22_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.cv2.conv.bias', (64), 'float32')
        self.model_22_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.cv2.conv.weight', (64,128,1,1), 'float32')
        self.model_22_m_0_cv3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.cv3.conv.bias', (128), 'float32')
        self.model_22_m_0_cv3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.m.0.cv3.conv.weight', (128,128,1,1), 'float32')
        self.model_22_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.conv.bias', (256), 'float32')
        self.model_22_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.conv.weight', (256,384,1,1), 'float32')
        self.model_23_cv2_0_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.0.0.conv.bias', (64), 'float32')
        self.model_23_cv2_0_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.0.0.conv.weight', (64,64,3,3), 'float32')
        self.model_23_cv2_0_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.0.1.conv.bias', (64), 'float32')
        self.model_23_cv2_0_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.0.1.conv.weight', (64,64,3,3), 'float32')
        self.model_23_cv2_0_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.0.2.bias', (64), 'float32')
        self.model_23_cv2_0_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.0.2.weight', (64,64,1,1), 'float32')
        self.model_23_cv3_0_0_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.0.0.conv.bias', (64), 'float32')
        self.model_23_cv3_0_0_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.0.0.conv.weight', (64,1,3,3), 'float32')
        self.model_23_cv3_0_0_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.0.1.conv.bias', (80), 'float32')
        self.model_23_cv3_0_0_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.0.1.conv.weight', (80,64,1,1), 'float32')
        self.model_23_cv3_0_1_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.1.0.conv.bias', (80), 'float32')
        self.model_23_cv3_0_1_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.1.0.conv.weight', (80,1,3,3), 'float32')
        self.model_23_cv3_0_1_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.1.1.conv.bias', (80), 'float32')
        self.model_23_cv3_0_1_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.1.1.conv.weight', (80,80,1,1), 'float32')
        self.model_23_cv3_0_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.2.bias', (80), 'float32')
        self.model_23_cv3_0_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.0.2.weight', (80,80,1,1), 'float32')
        self.model_23_cv2_1_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.1.0.conv.bias', (64), 'float32')
        self.model_23_cv2_1_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.1.0.conv.weight', (64,128,3,3), 'float32')
        self.model_23_cv2_1_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.1.1.conv.bias', (64), 'float32')
        self.model_23_cv2_1_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.1.1.conv.weight', (64,64,3,3), 'float32')
        self.model_23_cv2_1_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.1.2.bias', (64), 'float32')
        self.model_23_cv2_1_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.1.2.weight', (64,64,1,1), 'float32')
        self.model_23_cv3_1_0_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.0.0.conv.bias', (128), 'float32')
        self.model_23_cv3_1_0_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.0.0.conv.weight', (128,1,3,3), 'float32')
        self.model_23_cv3_1_0_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.0.1.conv.bias', (80), 'float32')
        self.model_23_cv3_1_0_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.0.1.conv.weight', (80,128,1,1), 'float32')
        self.model_23_cv3_1_1_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.1.0.conv.bias', (80), 'float32')
        self.model_23_cv3_1_1_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.1.0.conv.weight', (80,1,3,3), 'float32')
        self.model_23_cv3_1_1_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.1.1.conv.bias', (80), 'float32')
        self.model_23_cv3_1_1_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.1.1.conv.weight', (80,80,1,1), 'float32')
        self.model_23_cv3_1_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.2.bias', (80), 'float32')
        self.model_23_cv3_1_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.1.2.weight', (80,80,1,1), 'float32')
        self.model_23_cv2_2_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.2.0.conv.bias', (64), 'float32')
        self.model_23_cv2_2_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.2.0.conv.weight', (64,256,3,3), 'float32')
        self.model_23_cv2_2_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.2.1.conv.bias', (64), 'float32')
        self.model_23_cv2_2_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.2.1.conv.weight', (64,64,3,3), 'float32')
        self.model_23_cv2_2_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.2.2.bias', (64), 'float32')
        self.model_23_cv2_2_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv2.2.2.weight', (64,64,1,1), 'float32')
        self.model_23_cv3_2_0_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.0.0.conv.bias', (256), 'float32')
        self.model_23_cv3_2_0_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.0.0.conv.weight', (256,1,3,3), 'float32')
        self.model_23_cv3_2_0_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.0.1.conv.bias', (80), 'float32')
        self.model_23_cv3_2_0_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.0.1.conv.weight', (80,256,1,1), 'float32')
        self.model_23_cv3_2_1_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.1.0.conv.bias', (80), 'float32')
        self.model_23_cv3_2_1_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.1.0.conv.weight', (80,1,3,3), 'float32')
        self.model_23_cv3_2_1_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.1.1.conv.bias', (80), 'float32')
        self.model_23_cv3_2_1_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.1.1.conv.weight', (80,80,1,1), 'float32')
        self.model_23_cv3_2_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.2.bias', (80), 'float32')
        self.model_23_cv3_2_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.cv3.2.2.weight', (80,80,1,1), 'float32')
        self.model_23_dfl_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.23.dfl.conv.weight', (1,16,1,1), 'float32')
        self.pnnx_188_data = self.load_pnnx_bin_as_parameter(archive, 'pnnx_188.data', (1,8400,), 'float32')
        self.pnnx_190_data = self.load_pnnx_bin_as_parameter(archive, 'pnnx_190.data', (2,8400,), 'float32')
        archive.close()

    def load_pnnx_bin_as_parameter(self, archive, key, shape, dtype, requires_grad=True):
        return nn.Parameter(self.load_pnnx_bin_as_tensor(archive, key, shape, dtype), requires_grad)

    def load_pnnx_bin_as_tensor(self, archive, key, shape, dtype):
        fd, tmppath = tempfile.mkstemp()
        with os.fdopen(fd, 'wb') as tmpf, archive.open(key) as keyfile:
            tmpf.write(keyfile.read())
        m = np.memmap(tmppath, dtype=dtype, mode='r', shape=shape).copy()
        os.remove(tmppath)
        return torch.from_numpy(m)

    def forward(self, v_0):
        v_1 = self.model_0_conv(v_0)
        v_2 = self.model_23_cv3_2_1_1_act(v_1)
        v_3 = self.model_1_conv(v_2)
        v_4 = self.pnnx_unique_0(v_3)
        v_5 = self.model_2_cv1_conv(v_4)
        v_6 = self.pnnx_unique_1(v_5)
        v_7, v_8 = torch.split(tensor=v_6, dim=1, split_size_or_sections=(16,16))
        v_9 = self.model_2_m_0_cv1_conv(v_8)
        v_10 = self.pnnx_unique_2(v_9)
        v_11 = self.model_2_m_0_cv2_conv(v_10)
        v_12 = self.pnnx_unique_3(v_11)
        v_13 = (v_8 + v_12)
        v_14 = torch.cat((v_7, v_8, v_13), dim=1)
        v_15 = self.model_2_cv2_conv(v_14)
        v_16 = self.pnnx_unique_4(v_15)
        v_17 = self.model_3_conv(v_16)
        v_18 = self.pnnx_unique_5(v_17)
        v_19 = self.model_4_cv1_conv(v_18)
        v_20 = self.pnnx_unique_6(v_19)
        v_21, v_22 = torch.split(tensor=v_20, dim=1, split_size_or_sections=(32,32))
        v_23 = self.model_4_m_0_cv1_conv(v_22)
        v_24 = self.pnnx_unique_7(v_23)
        v_25 = self.model_4_m_0_cv2_conv(v_24)
        v_26 = self.pnnx_unique_8(v_25)
        v_27 = (v_22 + v_26)
        v_28 = torch.cat((v_21, v_22, v_27), dim=1)
        v_29 = self.model_4_cv2_conv(v_28)
        v_30 = self.pnnx_unique_9(v_29)
        v_31 = self.model_5_conv(v_30)
        v_32 = self.pnnx_unique_10(v_31)
        v_33 = self.model_6_cv1_conv(v_32)
        v_34 = self.pnnx_unique_11(v_33)
        v_35, v_36 = torch.split(tensor=v_34, dim=1, split_size_or_sections=(64,64))
        v_37 = self.model_6_m_0_cv1_conv(v_36)
        v_38 = self.pnnx_unique_12(v_37)
        v_39 = self.model_6_m_0_m_0_cv1_conv(v_38)
        v_40 = self.pnnx_unique_13(v_39)
        v_41 = self.model_6_m_0_m_0_cv2_conv(v_40)
        v_42 = self.pnnx_unique_14(v_41)
        v_43 = (v_38 + v_42)
        v_44 = self.model_6_m_0_m_1_cv1_conv(v_43)
        v_45 = self.pnnx_unique_15(v_44)
        v_46 = self.model_6_m_0_m_1_cv2_conv(v_45)
        v_47 = self.pnnx_unique_16(v_46)
        v_48 = (v_43 + v_47)
        v_49 = self.model_6_m_0_cv2_conv(v_36)
        v_50 = self.pnnx_unique_17(v_49)
        v_51 = torch.cat((v_48, v_50), dim=1)
        v_52 = self.model_6_m_0_cv3_conv(v_51)
        v_53 = self.pnnx_unique_18(v_52)
        v_54 = torch.cat((v_35, v_36, v_53), dim=1)
        v_55 = self.model_6_cv2_conv(v_54)
        v_56 = self.pnnx_unique_19(v_55)
        v_57 = self.model_7_conv(v_56)
        v_58 = self.pnnx_unique_20(v_57)
        v_59 = self.model_8_cv1_conv(v_58)
        v_60 = self.pnnx_unique_21(v_59)
        v_61, v_62 = torch.split(tensor=v_60, dim=1, split_size_or_sections=(128,128))
        v_63 = self.model_8_m_0_cv1_conv(v_62)
        v_64 = self.pnnx_unique_22(v_63)
        v_65 = self.model_8_m_0_m_0_cv1_conv(v_64)
        v_66 = self.pnnx_unique_23(v_65)
        v_67 = self.model_8_m_0_m_0_cv2_conv(v_66)
        v_68 = self.pnnx_unique_24(v_67)
        v_69 = (v_64 + v_68)
        v_70 = self.model_8_m_0_m_1_cv1_conv(v_69)
        v_71 = self.pnnx_unique_25(v_70)
        v_72 = self.model_8_m_0_m_1_cv2_conv(v_71)
        v_73 = self.pnnx_unique_26(v_72)
        v_74 = (v_69 + v_73)
        v_75 = self.model_8_m_0_cv2_conv(v_62)
        v_76 = self.pnnx_unique_27(v_75)
        v_77 = torch.cat((v_74, v_76), dim=1)
        v_78 = self.model_8_m_0_cv3_conv(v_77)
        v_79 = self.pnnx_unique_28(v_78)
        v_80 = torch.cat((v_61, v_62, v_79), dim=1)
        v_81 = self.model_8_cv2_conv(v_80)
        v_82 = self.pnnx_unique_29(v_81)
        v_83 = self.model_9_cv1_conv(v_82)
        v_84 = self.pnnx_unique_30(v_83)
        v_85 = self.model_9_m(v_84)
        v_86 = self.pnnx_unique_31(v_85)
        v_87 = self.pnnx_unique_32(v_86)
        v_88 = torch.cat((v_84, v_85, v_86, v_87), dim=1)
        v_89 = self.model_9_cv2_conv(v_88)
        v_90 = self.pnnx_unique_33(v_89)
        v_91 = self.model_10_cv1_conv(v_90)
        v_92 = self.pnnx_unique_34(v_91)
        v_93, v_94 = torch.split(tensor=v_92, dim=1, split_size_or_sections=(128,128))
        v_95 = self.model_10_m_0_attn_qkv_conv(v_94)
        v_96 = [v_94.size(0), 2, 128, -1]
        v_97 = v_95.view(*v_96)
        v_98, v_99, v_100 = torch.split(tensor=v_97, dim=2, split_size_or_sections=(32,32,64))
        v_101 = torch.transpose(input=v_98, dim0=-2, dim1=-1)
        v_102 = torch.matmul(input=v_101, other=v_99)
        v_103 = (v_102 * 0.176777)
        v_104 = F.softmax(input=v_103, dim=-1)
        v_105 = torch.transpose(input=v_104, dim0=-2, dim1=-1)
        v_106 = torch.matmul(input=v_100, other=v_105)
        v_107 = [v_94.size(0), v_94.size(1), v_94.size(2), v_94.size(3)]
        v_108 = v_106.view(*v_107)
        v_109 = v_100.reshape(*v_107)
        v_110 = self.model_10_m_0_attn_pe_conv(v_109)
        v_111 = (v_108 + v_110)
        v_112 = self.model_10_m_0_attn_proj_conv(v_111)
        v_113 = (v_94 + v_112)
        v_114 = self.model_10_m_0_ffn_0_conv(v_113)
        v_115 = self.pnnx_unique_35(v_114)
        v_116 = self.model_10_m_0_ffn_1_conv(v_115)
        v_117 = (v_113 + v_116)
        v_118 = torch.cat((v_93, v_117), dim=1)
        v_119 = self.model_10_cv2_conv(v_118)
        v_120 = self.pnnx_unique_36(v_119)
        v_121 = self.model_11(v_120)
        v_122 = torch.cat((v_121, v_56), dim=1)
        v_123 = self.model_13_cv1_conv(v_122)
        v_124 = self.pnnx_unique_37(v_123)
        v_125, v_126 = torch.split(tensor=v_124, dim=1, split_size_or_sections=(64,64))
        v_127 = self.model_13_m_0_cv1_conv(v_126)
        v_128 = self.pnnx_unique_38(v_127)
        v_129 = self.model_13_m_0_cv2_conv(v_128)
        v_130 = self.pnnx_unique_39(v_129)
        v_131 = (v_126 + v_130)
        v_132 = torch.cat((v_125, v_126, v_131), dim=1)
        v_133 = self.model_13_cv2_conv(v_132)
        v_134 = self.pnnx_unique_40(v_133)
        v_135 = self.model_14(v_134)
        v_136 = torch.cat((v_135, v_30), dim=1)
        v_137 = self.model_16_cv1_conv(v_136)
        v_138 = self.pnnx_unique_41(v_137)
        v_139, v_140 = torch.split(tensor=v_138, dim=1, split_size_or_sections=(32,32))
        v_141 = self.model_16_m_0_cv1_conv(v_140)
        v_142 = self.pnnx_unique_42(v_141)
        v_143 = self.model_16_m_0_cv2_conv(v_142)
        v_144 = self.pnnx_unique_43(v_143)
        v_145 = (v_140 + v_144)
        v_146 = torch.cat((v_139, v_140, v_145), dim=1)
        v_147 = self.model_16_cv2_conv(v_146)
        v_148 = self.pnnx_unique_44(v_147)
        v_149 = self.model_17_conv(v_148)
        v_150 = self.pnnx_unique_45(v_149)
        v_151 = torch.cat((v_150, v_134), dim=1)
        v_152 = self.model_19_cv1_conv(v_151)
        v_153 = self.pnnx_unique_46(v_152)
        v_154, v_155 = torch.split(tensor=v_153, dim=1, split_size_or_sections=(64,64))
        v_156 = self.model_19_m_0_cv1_conv(v_155)
        v_157 = self.pnnx_unique_47(v_156)
        v_158 = self.model_19_m_0_cv2_conv(v_157)
        v_159 = self.pnnx_unique_48(v_158)
        v_160 = (v_155 + v_159)
        v_161 = torch.cat((v_154, v_155, v_160), dim=1)
        v_162 = self.model_19_cv2_conv(v_161)
        v_163 = self.pnnx_unique_49(v_162)
        v_164 = self.model_20_conv(v_163)
        v_165 = self.pnnx_unique_50(v_164)
        v_166 = torch.cat((v_165, v_120), dim=1)
        v_167 = self.model_22_cv1_conv(v_166)
        v_168 = self.pnnx_unique_51(v_167)
        v_169, v_170 = torch.split(tensor=v_168, dim=1, split_size_or_sections=(128,128))
        v_171 = self.model_22_m_0_cv1_conv(v_170)
        v_172 = self.pnnx_unique_52(v_171)
        v_173 = self.model_22_m_0_m_0_cv1_conv(v_172)
        v_174 = self.pnnx_unique_53(v_173)
        v_175 = self.model_22_m_0_m_0_cv2_conv(v_174)
        v_176 = self.pnnx_unique_54(v_175)
        v_177 = (v_172 + v_176)
        v_178 = self.model_22_m_0_m_1_cv1_conv(v_177)
        v_179 = self.pnnx_unique_55(v_178)
        v_180 = self.model_22_m_0_m_1_cv2_conv(v_179)
        v_181 = self.pnnx_unique_56(v_180)
        v_182 = (v_177 + v_181)
        v_183 = self.model_22_m_0_cv2_conv(v_170)
        v_184 = self.pnnx_unique_57(v_183)
        v_185 = torch.cat((v_182, v_184), dim=1)
        v_186 = self.model_22_m_0_cv3_conv(v_185)
        v_187 = self.pnnx_unique_58(v_186)
        v_188 = torch.cat((v_169, v_170, v_187), dim=1)
        v_189 = self.model_22_cv2_conv(v_188)
        v_190 = self.pnnx_unique_59(v_189)
        v_191 = self.pnnx_188_data
        v_192 = self.pnnx_190_data
        v_193 = self.model_23_cv2_0_0_conv(v_148)
        v_194 = self.pnnx_unique_60(v_193)
        v_195 = self.model_23_cv2_0_1_conv(v_194)
        v_196 = self.pnnx_unique_61(v_195)
        v_197 = self.model_23_cv2_0_2(v_196)
        v_198 = self.model_23_cv3_0_0_0_conv(v_148)
        v_199 = self.pnnx_unique_62(v_198)
        v_200 = self.model_23_cv3_0_0_1_conv(v_199)
        v_201 = self.pnnx_unique_63(v_200)
        v_202 = self.model_23_cv3_0_1_0_conv(v_201)
        v_203 = self.pnnx_unique_64(v_202)
        v_204 = self.model_23_cv3_0_1_1_conv(v_203)
        v_205 = self.pnnx_unique_65(v_204)
        v_206 = self.model_23_cv3_0_2(v_205)
        v_207 = torch.cat((v_197, v_206), dim=1)
        v_208 = self.model_23_cv2_1_0_conv(v_163)
        v_209 = self.pnnx_unique_66(v_208)
        v_210 = self.model_23_cv2_1_1_conv(v_209)
        v_211 = self.pnnx_unique_67(v_210)
        v_212 = self.model_23_cv2_1_2(v_211)
        v_213 = self.model_23_cv3_1_0_0_conv(v_163)
        v_214 = self.pnnx_unique_68(v_213)
        v_215 = self.model_23_cv3_1_0_1_conv(v_214)
        v_216 = self.pnnx_unique_69(v_215)
        v_217 = self.model_23_cv3_1_1_0_conv(v_216)
        v_218 = self.pnnx_unique_70(v_217)
        v_219 = self.model_23_cv3_1_1_1_conv(v_218)
        v_220 = self.pnnx_unique_71(v_219)
        v_221 = self.model_23_cv3_1_2(v_220)
        v_222 = torch.cat((v_212, v_221), dim=1)
        v_223 = self.model_23_cv2_2_0_conv(v_190)
        v_224 = self.pnnx_unique_72(v_223)
        v_225 = self.model_23_cv2_2_1_conv(v_224)
        v_226 = self.pnnx_unique_73(v_225)
        v_227 = self.model_23_cv2_2_2(v_226)
        v_228 = self.model_23_cv3_2_0_0_conv(v_190)
        v_229 = self.pnnx_unique_74(v_228)
        v_230 = self.model_23_cv3_2_0_1_conv(v_229)
        v_231 = self.pnnx_unique_75(v_230)
        v_232 = self.model_23_cv3_2_1_0_conv(v_231)
        v_233 = self.pnnx_unique_76(v_232)
        v_234 = self.model_23_cv3_2_1_1_conv(v_233)
        v_235 = self.pnnx_unique_77(v_234)
        v_236 = self.model_23_cv3_2_2(v_235)
        v_237 = torch.cat((v_227, v_236), dim=1)
        v_238 = [v_207.size(0), 144, -1]
        v_239 = v_207.view(*v_238).transpose(1, 2)
        v_240 = v_222.view(*v_238).transpose(1, 2)
        v_241 = v_237.view(*v_238).transpose(1, 2)
        v_242 = torch.cat((v_239, v_240, v_241), dim=1)
        return v_242
    
        # v_243, v_244 = torch.split(tensor=v_242, dim=1, split_size_or_sections=(64,80))
        # v_245 = [v_243.size(0), 4, 16, v_243.size(2)]
        # v_246 = v_243.view(*v_245)
        # v_247 = torch.transpose(input=v_246, dim0=2, dim1=1)
        # v_248 = F.softmax(input=v_247, dim=1)
        # v_249 = self.model_23_dfl_conv(v_248)
        # v_250 = [v_243.size(0), 4, v_243.size(2)]
        # v_251 = v_249.view(*v_250)
        # v_252 = torch.unsqueeze(input=v_192, dim=0)
        # v_253, v_254 = torch.chunk(input=v_251, chunks=2, dim=1)
        # v_255 = (v_252 - v_253)
        # v_256 = (v_252 + v_254)
        # v_257 = ((v_255 + v_256) / 2)
        # v_258 = (v_256 - v_255)
        # v_259 = torch.cat((v_257, v_258), dim=1)
        # v_260 = (v_259 * v_191)
        # v_261 = F.sigmoid(input=v_244)
        # v_262 = torch.cat((v_260, v_261), dim=1)
        # return v_262

def export_torchscript():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 640, 640)

    mod = torch.jit.trace(net, v_0)
    mod.save("yolo11n_pnnx.py.pt")

def export_onnx():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 640, 640)

    torch.onnx.export(net, v_0, "yolo11n_pnnx.py.onnx", export_params=True, operator_export_type=torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK, opset_version=13, input_names=['in0'], output_names=['out0'])

@torch.no_grad()
def test_inference():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 640, 640)

    return net(v_0)

if __name__ == "__main__":
    print(test_inference())
